name: Build & Release

on:
  push:
    tags:
      - 'v*'

permissions:
  contents: write
  discussions: write

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [macos-latest, windows-latest]

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'yarn'

      - name: Install dependencies
        run: yarn install --frozen-lockfile

      - name: Set version from git tag (Linux/macOS)
        if: runner.os != 'Windows'
        run: |
          TAG_VERSION=${GITHUB_REF#refs/tags/v}
          npm version $TAG_VERSION --no-git-tag-version
          echo "Building version: $TAG_VERSION"

      - name: Set version from git tag (Windows)
        if: runner.os == 'Windows'
        run: |
          $TAG_VERSION = $env:GITHUB_REF -replace 'refs/tags/v', ''
          npm version $TAG_VERSION --no-git-tag-version
          Write-Host "Building version: $TAG_VERSION"



      - name: Build Electron app (macOS)
        if: matrix.os == 'macos-latest'
        run: yarn build-mac
        env:
          # macOS는 서명 없이 빌드
          CSC_IDENTITY_AUTO_DISCOVERY: false
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          # yarn 강제 사용
          npm_config_package_manager: yarn
          ELECTRON_BUILDER_ALLOW_UNRESOLVED_DEPENDENCIES: true

      - name: Build Electron app (Windows)
        if: matrix.os == 'windows-latest'
        run: yarn build-win
        env:
          # Windows도 서명 없이 빌드
          CSC_IDENTITY_AUTO_DISCOVERY: false
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          # yarn 강제 사용
          npm_config_package_manager: yarn
          ELECTRON_BUILDER_ALLOW_UNRESOLVED_DEPENDENCIES: true

      - name: Upload Release Assets (macOS)
        if: matrix.os == 'macos-latest'
        uses: softprops/action-gh-release@v1
        with:
          files: |
            dist/*.dmg
            dist/*.dmg.blockmap
            dist/latest-mac.yml
          draft: false
          prerelease: false
          generate_release_notes: true
          fail_on_unmatched_files: true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Upload Release Assets (Windows)
        if: matrix.os == 'windows-latest'
        uses: softprops/action-gh-release@v1
        with:
          files: |
            dist/*.exe
            dist/*.exe.blockmap
            dist/latest.yml
          draft: false
          prerelease: false
          generate_release_notes: true
          fail_on_unmatched_files: true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} 